/**
 * {% include 'sulu/comment.twig' %}

 */

define(['text!./list.html', 'services/{{ bundle_prefix }}/{{ entity|snake_case('-') }}-manager', 'services/{{ bundle_prefix }}/{{ entity|snake_case('-') }}-router'], function(list, manager, router) {

    var name = '{{ entity_pluralize|snake_case('-') }}';
    var defaultTab = 'general';

    return {

        defaults: {
            templates: {
                list: list
            }
        },

        header: {
            title: '{{ bundle_prefix }}.{{ entity_pluralize|snake_case('-') }}',
            underline: false,
            noBack: true,

            toolbar: {
                buttons: {
                    add: {},
                    deleteSelected: {}
                }
            }
        },

        layout: {
            content: {
                width: 'max'
            }
        },

        initialize: function() {
            this.render();

            this.bindDomEvents();
            this.bindCustomEvents();
        },

        render: function() {
            this.$el.html(this.templates.list());

            this.sandbox.sulu.initListToolbarAndList.call(this,
                    name,
                    manager.getBaseUrl() + '/fields?locale=' + this.options.locale,
                    {
                        el: this.$find('#list-toolbar-container'),
                        instanceName: name,
                        template: this.sandbox.sulu.buttons.get({
                            settings: {
                                options: {
                                    dropdownItems: [
                                        {
                                            type: 'columnOptions'
                                        }
                                    ]
                                }
                            }
                        })
                    },
                    {
                        el: this.sandbox.dom.find('#' + name +'-list'),
                        url: manager.getBaseUrl() + '?flat=true&locale=' + this.options.locale,
                        searchInstanceName: name,
                        searchFields: ['title'],
                        resultKey: '{{ entity_pluralize|snake_case() }}',
                        instanceName: name,
                        actionCallback: this.toEdit.bind(this)
                    }
            );
        },

        toEdit: function(id) {
            router.toEdit(this.options.locale, id, defaultTab);
        },

        toAdd: function() {
            router.toAdd(this.options.locale, defaultTab);
        },

        deleteItems: function(ids) {
            for (var i = 0, length = ids.length; i < length; i++) {
                this.deleteItem(ids[i]);
            }
        },

        deleteItem: function(id) {
            manager.remove(id, this.options.locale).then(function() {
                this.sandbox.emit('husky.datagrid.' + name + '.record.remove', id);
            }.bind(this));
        },

        bindDomEvents: function() {
        },

        bindCustomEvents: function() {
            this.sandbox.on('sulu.toolbar.add', this.toAdd.bind(this));

            this.sandbox.on('husky.datagrid.' + name + '.number.selections', function(number) {
                var postfix = number > 0 ? 'enable' : 'disable';
                this.sandbox.emit('sulu.header.toolbar.item.' + postfix, 'deleteSelected', false);
            }.bind(this));

            this.sandbox.on('sulu.toolbar.delete', function() {
                this.sandbox.emit('husky.datagrid.' + name + '.items.get-selected', this.deleteItems.bind(this));
            }.bind(this));
        }
    };
});
