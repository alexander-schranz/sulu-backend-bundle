define(['text!./list.html', 'services/{{ bundle_prefix }}/{{ entity|snake_case('-') }}-manager'], function(list, manager) {

    var defaults = {
        templates: {
            list: list
        }
    };

    var constants = {
        name: '{{ entity_pluralize|snake_case('-') }}',
        route: '{{ bundle_namespace }}/{{ entity_pluralize|snake_case('-') }}',
        translatePrefix: '{{ bundle_prefix }}.{{ entity_pluralize|snake_case('-') }}.',
        searchFields: ['title'],
        defaultTab: 'general'
    };

    return {

        defaults: defaults,

        header: {
            title: constants.translatePrefix + 'title',
            underline: false,

            toolbar: {
                buttons: {
                    add: {},
                    deleteSelected: {}
                }
            }
        },

        layout: {
            content: {
                width: 'max'
            }
        },

        initialize: function() {
            this.render();

            this.bindDomEvents();
            this.bindCustomEvents();
        },

        render: function() {
            this.$el.html(this.templates.list());

            this.sandbox.sulu.initListToolbarAndList.call(this,
                    constants.name,
                    manager.getBaseUrl() + '/fields',
                    {
                        el: this.$find('#list-toolbar-container'),
                        instanceName: constants.name,
                        template: this.sandbox.sulu.buttons.get({
                            settings: {
                                options: {
                                    dropdownItems: [
                                        {
                                            type: 'columnOptions'
                                        }
                                    ]
                                }
                            }
                        })
                    },
                    {
                        el: this.sandbox.dom.find('#' + constants.name +'-list'),
                        url: manager.getBaseUrl(),
                        searchInstanceName: constants.name,
                        searchFields: constants.searchFields,
                        resultKey: constants.name,
                        instanceName: constants.name,
                        actionCallback: this.toEdit.bind(this)
                    }
            );
        },

        toEdit: function(id) {
            this.sandbox.emit('sulu.router.navigate', constants.route + '/' + this.options.language + '/edit:' + id + '/' + constants.defaultTab);
        },

        toAdd: function() {
            this.sandbox.emit('sulu.router.navigate', constants.route + '/' + this.options.language + '/add/' + constants.defaultTab);
        },

        deleteItems: function(ids) {
            for (var i = 0, length = ids.length; i < length; i++) {
                this.deleteItem(ids[i]);
            }
        },

        deleteItem: function(id) {
            manager.remove(id).then(function() {
                this.sandbox.emit('husky.datagrid.' + constants.name + '.record.remove', id);
            }.bind(this));
        },

        bindDomEvents: function() {
        },

        bindCustomEvents: function() {
            this.sandbox.on('sulu.toolbar.add', this.toAdd.bind(this));

            this.sandbox.on('husky.datagrid.' + constants.name + '.number.selections', function(number) {
                var postfix = number > 0 ? 'enable' : 'disable';
                this.sandbox.emit('sulu.header.toolbar.item.' + postfix, 'deleteSelected', false);
            }.bind(this));

            this.sandbox.on('sulu.toolbar.delete', function() {
                this.sandbox.emit('husky.datagrid.' + constants.name + '.items.get-selected', this.deleteItems.bind(this));
            }.bind(this));
        }
    };
});
